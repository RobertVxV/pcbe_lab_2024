{"ast":null,"code":"var _jsxFileName = \"/home/denisa/Desktop/pcbe/pcbe_lab_2024/frontend/src/components/StatsViewer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nconst StatsViewer = () => {\n  const [stats, setStats] = useState({});\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await api.get('/info/stats');\n        setStats(response.data);\n      } catch (error) {\n        alert('Failed to load stats');\n      }\n    };\n    fetchStats();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Game Stats\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, Object.entries(stats).map(([key, value]) => /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, key, \": \", value))));\n};\nexport default StatsViewer;","map":{"version":3,"names":["React","useEffect","useState","api","StatsViewer","stats","setStats","fetchStats","response","get","data","error","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value"],"sources":["/home/denisa/Desktop/pcbe/pcbe_lab_2024/frontend/src/components/StatsViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\nconst StatsViewer = () => {\n    const [stats, setStats] = useState({});\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            try {\n                const response = await api.get('/info/stats');\n                setStats(response.data);\n            } catch (error) {\n                alert('Failed to load stats');\n            }\n        };\n\n        fetchStats();\n    }, []);\n\n    return (\n        <div>\n            <h2>Game Stats</h2>\n            <ul>\n                {Object.entries(stats).map(([key, value]) => (\n                    <li key={key}>\n                        {key}: {value}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default StatsViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;QAC7CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,KAAK,CAAC,sBAAsB,CAAC;MACjC;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACInB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CAAC,eACnBnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKC,MAAM,CAACC,OAAO,CAAChB,KAAK,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACpCxB,KAAA,CAAAa,aAAA;IAAIU,GAAG,EAAEA,GAAI;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACRI,GAAG,EAAC,IAAE,EAACC,KACR,CACP,CACD,CACH,CAAC;AAEd,CAAC;AAED,eAAepB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}